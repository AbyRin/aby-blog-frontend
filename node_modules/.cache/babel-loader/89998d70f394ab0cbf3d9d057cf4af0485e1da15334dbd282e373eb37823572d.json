{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nconst fallDiv = document.getElementById(\"fall_div\");\nconst columnCount = window.innerWidth * 1.5 <= window.screen.width ? 2 : 3;\n\n// 爬虫图片路径\nfunction loadImagesFromDirectory(directoryPath) {\n  const imagePaths = [];\n  const imageDirectory = directoryPath;\n  for (let i = 1; i <= 20; i++) {\n    const imagePath = imageDirectory + i + \".png\";\n    imagePaths.push(imagePath);\n  }\n  populateColumns(imagePaths);\n}\n// 调用\ndocument.addEventListener('DOMContentLoaded', function () {\n  loadImagesFromDirectory(\"/image/reptile_image/\");\n});\nfunction populateColumns(imagePaths) {\n  // 创建瀑布列\n  for (let i = 0; i < columnCount; i++) {\n    const column = document.createElement(\"column\");\n    column.classList.add(\"column\");\n    if (fallDiv) {\n      fallDiv.appendChild(column);\n    }\n  }\n\n  // 渲染\n  imagePaths.forEach((imagePath, index) => {\n    const column = fallDiv.children[index % columnCount];\n\n    // 创建：image_div\n    const imageDiv = document.createElement(\"div\");\n    imageDiv.classList.add(\"image_div\");\n    imageDiv.style.boxShadow = \"2px 2px 2px #bdbdbd\";\n    column.appendChild(imageDiv);\n\n    // 创建：图片\n    const image = document.createElement(\"img\");\n    image.src = imagePath;\n    image.alt = \"Image \" + (index + 1);\n    // 图片加载失败时隐藏\n    image.onerror = function () {\n      imageDiv.style.display = 'none';\n    };\n    imageDiv.appendChild(image);\n\n    // 创建：按钮组 image_buttons\n    const imageButtons = document.createElement(\"div\");\n    imageButtons.classList.add(\"image_buttons\");\n    imageDiv.appendChild(imageButtons);\n\n    // 创建：按钮 image_button\n    for (let j = 1; j <= 3; j++) {\n      const button = document.createElement(\"div\");\n      button.classList.add(\"image_button\");\n      button.id = \"btn\" + j;\n      button.style.display = \"flex\";\n      button.style.justifyContent = \"center\";\n      button.style.alignItems = \"center\";\n\n      // 创建：按钮图标 img\n      let imgSrc = \"\";\n      if (j === 1) {\n        imgSrc = \"@/image/icon/icons8-heart-50-gray.png\";\n      } else if (j === 2) {\n        imgSrc = \"@/image/icon/icons8-bookmark-60-gray.png\";\n      } else {\n        imgSrc = \"@/image/icon/icons8-download-48-gray.png\";\n      }\n      const img = document.createElement(\"img\");\n      img.src = imgSrc;\n      img.style.maxWidth = \"24px\";\n      img.alt = \"\";\n      button.appendChild(img);\n      imageButtons.appendChild(button);\n    }\n  }); // 完成渲染\n\n  // 遍历每个 image_buttons 并为其中的按钮绑定事件处理程序\n  function handleButtonHover(event) {\n    const button = event.currentTarget;\n    // console.log(button)\n    const img = button.querySelector('img');\n    // console.log(img)\n    const btnId = button.id;\n    // console.log(btnId)\n\n    if (event.type === 'mouseover') {\n      // console.log('鼠标进来')\n      if (btnId === 'btn1') {\n        img.src = \"@/image/icon/icons8-heart-50-color.png\";\n        button.style.borderRadius = \"50px\";\n      } else if (btnId === 'btn2') {\n        img.src = \"@/image/icon/icons8-bookmark-60-color.png\";\n        button.style.borderRadius = \"50px\";\n      } else {\n        img.src = \"@/image/icon/icons8-download-48-color.png\";\n        button.style.borderRadius = \"50px\";\n      }\n    } else if (event.type === 'mouseout') {\n      // console.log('鼠标出去')\n      if (btnId === 'btn1') {\n        img.src = \"@/image/icon/icons8-heart-50-gray.png\";\n        button.style.borderRadius = \"10px\";\n      } else if (btnId === 'btn2') {\n        img.src = \"@/image/icon/icons8-bookmark-60-gray.png\";\n        button.style.borderRadius = \"10px\";\n      } else {\n        img.src = \"@/image/icon/icons8-download-48-gray.png\";\n        button.style.borderRadius = \"10px\";\n      }\n    }\n  }\n\n  // 获取所有 image_button 并 绑定事件\n  const allImageButtons = document.querySelectorAll(\".image_button\");\n  allImageButtons.forEach(button => {\n    button.addEventListener('mouseover', handleButtonHover);\n    button.addEventListener('mouseout', handleButtonHover);\n  });\n}\n\n// 【注意：已弃用，改用伪类】\n// 功能: 鼠标移动到图片上时添加遮罩、按钮，移出图片外时移除遮罩、按钮\n// 启用防抖\n// function debounce(fn, t) {\n//     let timer\n//     return function () {\n//         // 如果有定时器就清除\n//         if (timer) clearTimeout(timer)\n//         // 开启定时器\n//         timer = setTimeout(function () {\n//             fn()\n//         }, t)\n//     }\n// }\n// // 主函数\n// function imgCover (image) {\n//     image.addEventListener('mouseover', function() {\n//         // 创建遮罩\n//         const focusDiv = document.createElement(\"div\");\n//         focusDiv.classList.add(\"focus_div\");\n//         // 添加遮罩\n//         if (!image.parentNode.contains(focusDiv)) {\n//             image.parentNode.appendChild(focusDiv);\n//             // 显示按钮\n//             image.parentNode.querySelector('.image_buttons').style.display = \"flex\";     \n//             image.addEventListener('mouseout', function() {\n//                 // 移除遮罩\n//                 if (image.parentNode.contains(focusDiv)) {\n//                     image.parentNode.removeChild(focusDiv);\n//                 }\n//                 // 隐藏按钮\n//                 image.parentNode.querySelector('.image_buttons').style.display = \"none\";\n//             })\n//         }\n//     })\n// }\n// const images = document.querySelectorAll(\".image_div img\");\n// for (let i = 0; i < images.length; i++) {\n//     const image = images[i]\n//     image.addEventListener('mouseover', debounce(function() {imgCover(image)}, 200))\n// }\n\nfunction throttle(fn, t) {\n  // 功能: 页面resize时刷新（启用节流）\n  let timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function () {\n        fn(),\n        // 清空定时器\n        timer = null;\n      }, t);\n    }\n  };\n}\n// 主函数\n// 注意: 为了保证刷新的流畅, 浏览器要启用缓存\nfunction refreshOnResize() {\n  location.reload();\n}\nwindow.addEventListener('resize', throttle(refreshOnResize, 500));\n\n// 电梯：backTop键\ndocument.addEventListener('DOMContentLoaded', function () {\n  (function () {\n    const backTop = document.querySelector('#backTop');\n    const img = backTop.querySelector('img');\n    // 修改样式\n    backTop.addEventListener('mouseover', function () {\n      img.src = '@//image/icon/icons8-top-100-white.png';\n    });\n    backTop.addEventListener('mouseout', function () {\n      img.src = '@//image/icon/icons8-top-100-gray.png';\n    });\n    // backTop功能\n    backTop.addEventListener('click', function () {\n      window.scrollTo(0, 0);\n    });\n  })();\n});","map":{"version":3,"names":["fallDiv","document","getElementById","columnCount","window","innerWidth","screen","width","loadImagesFromDirectory","directoryPath","imagePaths","imageDirectory","i","imagePath","push","populateColumns","addEventListener","column","createElement","classList","add","appendChild","forEach","index","children","imageDiv","style","boxShadow","image","src","alt","onerror","display","imageButtons","j","button","id","justifyContent","alignItems","imgSrc","img","maxWidth","handleButtonHover","event","currentTarget","querySelector","btnId","type","borderRadius","allImageButtons","querySelectorAll","throttle","fn","t","timer","setTimeout","refreshOnResize","location","reload","backTop","scrollTo"],"sources":["D:\\IDEAWorkSpace\\aby-blog-v2\\src\\views\\Inspiration.vue"],"sourcesContent":["<template>\r\n    <!-- 顶部 -->\r\n    <div class=\"top\" th:insert=\"/top.html\"></div>\r\n\r\n    <!-- 侧边栏 -->\r\n    <div th:insert=\"/sidebar.html\"></div>\r\n\r\n    <!-- 网页主要内容 -->\r\n    <div class=\"container\">\r\n        <!-- 图瀑布 -->\r\n        <div class=\"fall_div\" id=\"fall_div\">\r\n        </div>\r\n    </div>\r\n\r\n    <!-- 功能: 电梯 -->\r\n    <div class=\"elevator\">\r\n        <ul class=\"elevator_list\">\r\n            <li id=\"backTop\"><img src=\"@/image/icon/icons8-top-100-gray.png\" alt=\"\"></li>\r\n        </ul>\r\n    </div>\r\n\r\n    <!-- 底部 -->\r\n    <div class=\"bottom\" th:insert=\"/bottom.html\"></div>\r\n</template>\r\n\r\n<script>\r\nconst fallDiv = document.getElementById(\"fall_div\");\r\nconst columnCount = window.innerWidth*1.5 <= window.screen.width ? 2 : 3;\r\n\r\n// 爬虫图片路径\r\nfunction loadImagesFromDirectory(directoryPath) {\r\n    const imagePaths = [];\r\n    const imageDirectory = directoryPath;\r\n\r\n    for (let i = 1; i <= 20; i++) {\r\n        const imagePath = imageDirectory + i + \".png\";\r\n        imagePaths.push(imagePath);\r\n    }\r\n    populateColumns(imagePaths);\r\n}\r\n// 调用\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    loadImagesFromDirectory(\"/image/reptile_image/\");\r\n});\r\n\r\nfunction populateColumns(imagePaths) {\r\n    // 创建瀑布列\r\n    for (let i = 0; i < columnCount; i++) {\r\n        const column = document.createElement(\"column\");\r\n        column.classList.add(\"column\");\r\n        if (fallDiv) {\r\n            fallDiv.appendChild(column);\r\n        }\r\n    }\r\n\r\n    // 渲染\r\n    imagePaths.forEach((imagePath, index) => {\r\n        const column = fallDiv.children[index % columnCount];\r\n\r\n        // 创建：image_div\r\n        const imageDiv = document.createElement(\"div\");\r\n        imageDiv.classList.add(\"image_div\");\r\n        imageDiv.style.boxShadow = \"2px 2px 2px #bdbdbd\";\r\n        column.appendChild(imageDiv);\r\n\r\n        // 创建：图片\r\n        const image = document.createElement(\"img\");\r\n        image.src = imagePath;\r\n        image.alt = \"Image \" + (index + 1);\r\n        // 图片加载失败时隐藏\r\n        image.onerror = function() {\r\n            imageDiv.style.display = 'none';\r\n        };\r\n        imageDiv.appendChild(image);\r\n\r\n        // 创建：按钮组 image_buttons\r\n        const imageButtons = document.createElement(\"div\");\r\n        imageButtons.classList.add(\"image_buttons\");\r\n        imageDiv.appendChild(imageButtons);\r\n\r\n        // 创建：按钮 image_button\r\n        for (let j = 1; j <= 3; j++) {\r\n            const button = document.createElement(\"div\");\r\n            button.classList.add(\"image_button\");\r\n\r\n            button.id = \"btn\" + j;\r\n            button.style.display = \"flex\"\r\n            button.style.justifyContent = \"center\";\r\n            button.style.alignItems = \"center\";\r\n            \r\n            // 创建：按钮图标 img\r\n            let imgSrc = \"\";\r\n            if (j === 1) {\r\n                imgSrc = \"@/image/icon/icons8-heart-50-gray.png\";\r\n            } else if (j === 2) {\r\n                imgSrc = \"@/image/icon/icons8-bookmark-60-gray.png\";\r\n            } else {\r\n                imgSrc = \"@/image/icon/icons8-download-48-gray.png\";\r\n            }\r\n            \r\n            const img = document.createElement(\"img\");\r\n            img.src = imgSrc;\r\n            img.style.maxWidth = \"24px\";\r\n            img.alt = \"\";\r\n            \r\n            button.appendChild(img);\r\n            imageButtons.appendChild(button);\r\n        }\r\n    });  // 完成渲染\r\n\r\n    // 遍历每个 image_buttons 并为其中的按钮绑定事件处理程序\r\n    function handleButtonHover(event) {\r\n        const button = event.currentTarget;\r\n        // console.log(button)\r\n        const img = button.querySelector('img');\r\n        // console.log(img)\r\n        const btnId = button.id;\r\n        // console.log(btnId)\r\n    \r\n        if (event.type === 'mouseover') {\r\n            // console.log('鼠标进来')\r\n            if (btnId === 'btn1') {\r\n                img.src = \"@/image/icon/icons8-heart-50-color.png\";\r\n                button.style.borderRadius = \"50px\";\r\n            } else if (btnId === 'btn2') {\r\n                img.src = \"@/image/icon/icons8-bookmark-60-color.png\";\r\n                button.style.borderRadius = \"50px\";\r\n            } else {\r\n                img.src = \"@/image/icon/icons8-download-48-color.png\";\r\n                button.style.borderRadius = \"50px\";\r\n            }\r\n        } else if (event.type === 'mouseout') {\r\n            // console.log('鼠标出去')\r\n            if (btnId === 'btn1') {\r\n                img.src = \"@/image/icon/icons8-heart-50-gray.png\";\r\n                button.style.borderRadius = \"10px\";\r\n            } else if (btnId === 'btn2') {\r\n                img.src = \"@/image/icon/icons8-bookmark-60-gray.png\";\r\n                button.style.borderRadius = \"10px\";\r\n            } else {\r\n                img.src = \"@/image/icon/icons8-download-48-gray.png\";\r\n                button.style.borderRadius = \"10px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取所有 image_button 并 绑定事件\r\n    const allImageButtons = document.querySelectorAll(\".image_button\");\r\n\r\n    allImageButtons.forEach(button => {\r\n        button.addEventListener('mouseover', handleButtonHover);\r\n        button.addEventListener('mouseout', handleButtonHover);\r\n    });\r\n}\r\n\r\n// 【注意：已弃用，改用伪类】\r\n// 功能: 鼠标移动到图片上时添加遮罩、按钮，移出图片外时移除遮罩、按钮\r\n// 启用防抖\r\n// function debounce(fn, t) {\r\n//     let timer\r\n//     return function () {\r\n//         // 如果有定时器就清除\r\n//         if (timer) clearTimeout(timer)\r\n//         // 开启定时器\r\n//         timer = setTimeout(function () {\r\n//             fn()\r\n//         }, t)\r\n//     }\r\n// }\r\n// // 主函数\r\n// function imgCover (image) {\r\n//     image.addEventListener('mouseover', function() {\r\n//         // 创建遮罩\r\n//         const focusDiv = document.createElement(\"div\");\r\n//         focusDiv.classList.add(\"focus_div\");\r\n//         // 添加遮罩\r\n//         if (!image.parentNode.contains(focusDiv)) {\r\n//             image.parentNode.appendChild(focusDiv);\r\n//             // 显示按钮\r\n//             image.parentNode.querySelector('.image_buttons').style.display = \"flex\";     \r\n//             image.addEventListener('mouseout', function() {\r\n//                 // 移除遮罩\r\n//                 if (image.parentNode.contains(focusDiv)) {\r\n//                     image.parentNode.removeChild(focusDiv);\r\n//                 }\r\n//                 // 隐藏按钮\r\n//                 image.parentNode.querySelector('.image_buttons').style.display = \"none\";\r\n//             })\r\n//         }\r\n//     })\r\n// }\r\n// const images = document.querySelectorAll(\".image_div img\");\r\n// for (let i = 0; i < images.length; i++) {\r\n//     const image = images[i]\r\n//     image.addEventListener('mouseover', debounce(function() {imgCover(image)}, 200))\r\n// }\r\n\r\nfunction throttle(fn, t) {  // 功能: 页面resize时刷新（启用节流）\r\n    let timer = null;\r\n    return function () {\r\n        if (!timer) {\r\n            timer = setTimeout(function () {\r\n                fn(),\r\n                // 清空定时器\r\n                timer = null;\r\n            }, t);\r\n        }\r\n    }\r\n}\r\n// 主函数\r\n// 注意: 为了保证刷新的流畅, 浏览器要启用缓存\r\nfunction refreshOnResize() {\r\n    location.reload();\r\n}\r\nwindow.addEventListener('resize', throttle(refreshOnResize, 500))\r\n\r\n// 电梯：backTop键\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    (function () {\r\n        const backTop = document.querySelector('#backTop')\r\n        const img = backTop.querySelector('img');\r\n        // 修改样式\r\n        backTop.addEventListener('mouseover', function () {\r\n           img.src = '@//image/icon/icons8-top-100-white.png'\r\n        })\r\n        backTop.addEventListener('mouseout', function () {\r\n            img.src = '@//image/icon/icons8-top-100-gray.png'\r\n         })\r\n        // backTop功能\r\n        backTop.addEventListener('click', function () {\r\n            window.scrollTo(0, 0)\r\n        })\r\n    })();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    scroll-behavior: smooth;\r\n}\r\nbody{\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    height: 100%;\r\n    background: #ffffff;\r\n}\r\n\r\np {\r\n    margin-block: 0;\r\n}\r\n\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: Center;\r\n\r\n    margin-top: 148px;\r\n\r\n    /* background-color: #ffffff; */\r\n    /* box-shadow: 2px 2px 2px #bdbdbd; */\r\n}\r\n\r\n/* 图瀑布 —————————————————————————————————————————————————— */\r\n.fall_div {\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n\r\n.column {\r\n    flex: 1;\r\n}\r\n\r\n.image_div {\r\n    width: 400px;\r\n    height: auto;\r\n\r\n    margin: 20px 0;\r\n    padding: 0;\r\n    position: relative;\r\n}\r\n\r\n.image_div img {\r\n    width: 400px;\r\n    height: auto;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n/* 唤醒遮罩 */\r\n.image_div::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    box-shadow: 0 -50px 50px -30px rgba(0, 0, 0, 0.7) inset,\r\n                0 50px 50px -30px rgba(0, 0, 0, 0.7) inset;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n}\r\n\r\n.image_div:hover::before {\r\n    opacity: 1;\r\n}\r\n\r\n.image_buttons {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n\r\n    right: 5px;\r\n    bottom: 5px;\r\n    z-index: 100;\r\n\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n}\r\n/* 唤醒按钮 */\r\n.image_div:hover .image_buttons {\r\n    opacity: 1;\r\n}\r\n\r\n.image_button {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 10px;\r\n\r\n    margin-bottom: 8px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n\r\n    text-align: center;\r\n    line-height: 40px;\r\n    cursor: pointer;\r\n    transition: border-radius 0.3s;\r\n}\r\n.image_button:hover {\r\n    background-color: rgba(255, 255, 255);\r\n}\r\n\r\n/* 渐变遮罩 */\r\n.focus_div {\r\n    display: flex;\r\n    position: absolute;\r\n\r\n    left: 0;\r\n    top: 0;\r\n\r\n    width: 400px;\r\n    height: 100%;\r\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), transparent);\r\n\r\n    /* z-index: 99; */\r\n}\r\n\r\n/* 功能: 电梯 */\r\n.elevator {\r\n    position: fixed;\r\n    width: 100px;\r\n    height: auto;\r\n\r\n    left: 52%;\r\n    margin-left: 620px;\r\n    bottom: 40px;\r\n    z-index: 100;\r\n\r\n    text-align: center;\r\n    transition: all .5s;\r\n}\r\n.elevator .elevator_list {\r\n    width: 100px;\r\n    height: auto;\r\n\r\n    background: #fff;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    box-shadow: 5px 5px 5px #bdbdbd;\r\n}\r\n.elevator .elevator_list li {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n\r\n    border: 1px solid #dcdcdc;\r\n    margin: 0;\r\n\r\n    list-style-type: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.elevator .elevator_list li img {\r\n    width: 60px;\r\n}\r\n\r\n.elevator .elevator_list li:hover {\r\n    background-color: #f84f52;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}