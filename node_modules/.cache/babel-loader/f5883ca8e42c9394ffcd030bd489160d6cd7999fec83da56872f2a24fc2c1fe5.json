{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/image/icon/icons8-top-100-gray.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-0a19fda0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"top\",\n  \"th:insert\": \"/top.html\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  \"th:insert\": \"/sidebar.html\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container\"\n}, [/*#__PURE__*/_createCommentVNode(\" 图瀑布 \"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"fall_div\",\n  id: \"fall_div\"\n})], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"elevator\"\n}, [/*#__PURE__*/_createElementVNode(\"ul\", {\n  class: \"elevator_list\"\n}, [/*#__PURE__*/_createElementVNode(\"li\", {\n  id: \"backTop\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n})])])], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bottom\",\n  \"th:insert\": \"/bottom.html\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 顶部 \"), _hoisted_1, _createCommentVNode(\" 侧边栏 \"), _hoisted_2, _createCommentVNode(\" 网页主要内容 \"), _hoisted_3, _createCommentVNode(\" 功能: 电梯 \"), _hoisted_4, _createCommentVNode(\" 底部 \"), _hoisted_5], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","class","_createCommentVNode","id","src","alt","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5"],"sources":["D:\\IDEAWorkSpace\\aby-blog-v2\\src\\views\\Inspiration.vue"],"sourcesContent":["<template>\r\n    <!-- 顶部 -->\r\n    <div class=\"top\" th:insert=\"/top.html\"></div>\r\n\r\n    <!-- 侧边栏 -->\r\n    <div th:insert=\"/sidebar.html\"></div>\r\n\r\n    <!-- 网页主要内容 -->\r\n    <div class=\"container\">\r\n        <!-- 图瀑布 -->\r\n        <div class=\"fall_div\" id=\"fall_div\">\r\n        </div>\r\n    </div>\r\n\r\n    <!-- 功能: 电梯 -->\r\n    <div class=\"elevator\">\r\n        <ul class=\"elevator_list\">\r\n            <li id=\"backTop\"><img src=\"@/image/icon/icons8-top-100-gray.png\" alt=\"\"></li>\r\n        </ul>\r\n    </div>\r\n\r\n    <!-- 底部 -->\r\n    <div class=\"bottom\" th:insert=\"/bottom.html\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    const fallDiv = document.getElementById(\"fall_div\");\r\n    const columnCount = window.innerWidth * 1.5 <= window.screen.width ? 2 : 3;\r\n\r\n    // 爬虫图片路径\r\n    function loadImagesFromDirectory(directoryPath) {\r\n        const imagePaths = [];\r\n        const imageDirectory = directoryPath;\r\n\r\n        for (let i = 1; i <= 20; i++) {\r\n            const imagePath = imageDirectory + i + \".png\";\r\n            imagePaths.push(imagePath);\r\n        }\r\n        populateColumns(imagePaths);\r\n    }\r\n\r\n    // 渲染列和图片\r\n    function populateColumns(imagePaths) {\r\n        // 创建瀑布列\r\n        for (let i = 0; i < columnCount; i++) {\r\n            const column = document.createElement(\"column\");\r\n            column.classList.add(\"column\");\r\n            if (fallDiv) {\r\n                fallDiv.appendChild(column);\r\n            }\r\n        }\r\n\r\n        // 渲染\r\n        imagePaths.forEach((imagePath, index) => {\r\n            const column = fallDiv.children[index % columnCount];\r\n\r\n            // 创建：image_div\r\n            const imageDiv = document.createElement(\"div\");\r\n            imageDiv.classList.add(\"image_div\");\r\n            imageDiv.style.boxShadow = \"2px 2px 2px #bdbdbd\";\r\n            column.appendChild(imageDiv);\r\n\r\n            // 创建：图片\r\n            const image = document.createElement(\"img\");\r\n            image.src = imagePath;\r\n            image.alt = \"Image \" + (index + 1);\r\n            // 图片加载失败时隐藏\r\n            image.onerror = function () {\r\n                imageDiv.style.display = 'none';\r\n            };\r\n            imageDiv.appendChild(image);\r\n\r\n            // 创建：按钮组 image_buttons\r\n            const imageButtons = document.createElement(\"div\");\r\n            imageButtons.classList.add(\"image_buttons\");\r\n            imageDiv.appendChild(imageButtons);\r\n\r\n            // 创建：按钮 image_button\r\n            for (let j = 1; j <= 3; j++) {\r\n                const button = document.createElement(\"div\");\r\n                button.classList.add(\"image_button\");\r\n\r\n                button.id = \"btn\" + j;\r\n                button.style.display = \"flex\"\r\n                button.style.justifyContent = \"center\";\r\n                button.style.alignItems = \"center\";\r\n\r\n                // 创建：按钮图标 img\r\n                let imgSrc = \"\";\r\n                if (j === 1) {\r\n                    imgSrc = \"@/image/icon/icons8-heart-50-gray.png\";\r\n                } else if (j === 2) {\r\n                    imgSrc = \"@/image/icon/icons8-bookmark-60-gray.png\";\r\n                } else {\r\n                    imgSrc = \"@/image/icon/icons8-download-48-gray.png\";\r\n                }\r\n\r\n                const img = document.createElement(\"img\");\r\n                img.src = imgSrc;\r\n                img.style.maxWidth = \"24px\";\r\n                img.alt = \"\";\r\n\r\n                button.appendChild(img);\r\n                imageButtons.appendChild(button);\r\n            }\r\n        }); // 完成渲染\r\n\r\n        // 遍历每个 image_buttons 并为其中的按钮绑定事件处理程序\r\n        function handleButtonHover(event) {\r\n            const button = event.currentTarget;\r\n            const img = button.querySelector('img');\r\n            const btnId = button.id;\r\n\r\n            if (event.type === 'mouseover') {\r\n                if (btnId === 'btn1') {\r\n                    img.src = \"@/image/icon/icons8-heart-50-color.png\";\r\n                    button.style.borderRadius = \"50px\";\r\n                } else if (btnId === 'btn2') {\r\n                    img.src = \"@/image/icon/icons8-bookmark-60-color.png\";\r\n                    button.style.borderRadius = \"50px\";\r\n                } else {\r\n                    img.src = \"@/image/icon/icons8-download-48-color.png\";\r\n                    button.style.borderRadius = \"50px\";\r\n                }\r\n            } else if (event.type === 'mouseout') {\r\n                if (btnId === 'btn1') {\r\n                    img.src = \"@/image/icon/icons8-heart-50-gray.png\";\r\n                    button.style.borderRadius = \"10px\";\r\n                } else if (btnId === 'btn2') {\r\n                    img.src = \"@/image/icon/icons8-bookmark-60-gray.png\";\r\n                    button.style.borderRadius = \"10px\";\r\n                } else {\r\n                    img.src = \"@/image/icon/icons8-download-48-gray.png\";\r\n                    button.style.borderRadius = \"10px\";\r\n                }\r\n            }\r\n        }\r\n\r\n        // 获取所有 image_button 并 绑定事件\r\n        const allImageButtons = document.querySelectorAll(\".image_button\");\r\n\r\n        allImageButtons.forEach(button => {\r\n            button.addEventListener('mouseover', handleButtonHover);\r\n            button.addEventListener('mouseout', handleButtonHover);\r\n        });\r\n    }\r\n    // 调用\r\n    loadImagesFromDirectory(\"/image/reptile_image/\");\r\n\r\n    // 功能: 页面resize时刷新（启用节流）\r\n    function throttle(fn, t) {  // \r\n        let timer = null;\r\n        return function () {\r\n            if (!timer) {\r\n                timer = setTimeout(function () {\r\n                    fn(),\r\n                    // 清空定时器\r\n                    timer = null;\r\n                }, t);\r\n            }\r\n        }\r\n    }\r\n    // 主函数\r\n    // 注意: 为了保证刷新的流畅, 浏览器要启用缓存\r\n    function refreshOnResize() {\r\n        location.reload();\r\n    }\r\n    window.addEventListener('resize', throttle(refreshOnResize, 500))\r\n\r\n    // 电梯：backTop键\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        (function () {\r\n            const backTop = document.querySelector('#backTop')\r\n            const img = backTop.querySelector('img');\r\n            // 修改样式\r\n            backTop.addEventListener('mouseover', function () {\r\n            img.src = '@//image/icon/icons8-top-100-white.png'\r\n            })\r\n            backTop.addEventListener('mouseout', function () {\r\n                img.src = '@//image/icon/icons8-top-100-gray.png'\r\n            })\r\n            // backTop功能\r\n            backTop.addEventListener('click', function () {\r\n                window.scrollTo(0, 0)\r\n            })\r\n        })();\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    scroll-behavior: smooth;\r\n}\r\nbody{\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    height: 100%;\r\n    background: #ffffff;\r\n}\r\n\r\np {\r\n    margin-block: 0;\r\n}\r\n\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: Center;\r\n\r\n    margin-top: 148px;\r\n\r\n    /* background-color: #ffffff; */\r\n    /* box-shadow: 2px 2px 2px #bdbdbd; */\r\n}\r\n\r\n/* 图瀑布 —————————————————————————————————————————————————— */\r\n.fall_div {\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n\r\n.column {\r\n    flex: 1;\r\n}\r\n\r\n.image_div {\r\n    width: 400px;\r\n    height: auto;\r\n\r\n    margin: 20px 0;\r\n    padding: 0;\r\n    position: relative;\r\n}\r\n\r\n.image_div img {\r\n    width: 400px;\r\n    height: auto;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n/* 唤醒遮罩 */\r\n.image_div::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    box-shadow: 0 -50px 50px -30px rgba(0, 0, 0, 0.7) inset,\r\n                0 50px 50px -30px rgba(0, 0, 0, 0.7) inset;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n}\r\n\r\n.image_div:hover::before {\r\n    opacity: 1;\r\n}\r\n\r\n.image_buttons {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n\r\n    right: 5px;\r\n    bottom: 5px;\r\n    z-index: 100;\r\n\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n}\r\n/* 唤醒按钮 */\r\n.image_div:hover .image_buttons {\r\n    opacity: 1;\r\n}\r\n\r\n.image_button {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 10px;\r\n\r\n    margin-bottom: 8px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n\r\n    text-align: center;\r\n    line-height: 40px;\r\n    cursor: pointer;\r\n    transition: border-radius 0.3s;\r\n}\r\n.image_button:hover {\r\n    background-color: rgba(255, 255, 255);\r\n}\r\n\r\n/* 渐变遮罩 */\r\n.focus_div {\r\n    display: flex;\r\n    position: absolute;\r\n\r\n    left: 0;\r\n    top: 0;\r\n\r\n    width: 400px;\r\n    height: 100%;\r\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), transparent);\r\n\r\n    /* z-index: 99; */\r\n}\r\n\r\n/* 功能: 电梯 */\r\n.elevator {\r\n    position: fixed;\r\n    width: 100px;\r\n    height: auto;\r\n\r\n    left: 52%;\r\n    margin-left: 620px;\r\n    bottom: 40px;\r\n    z-index: 100;\r\n\r\n    text-align: center;\r\n    transition: all .5s;\r\n}\r\n.elevator .elevator_list {\r\n    width: 100px;\r\n    height: auto;\r\n\r\n    background: #fff;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    box-shadow: 5px 5px 5px #bdbdbd;\r\n}\r\n.elevator .elevator_list li {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n\r\n    border: 1px solid #dcdcdc;\r\n    margin: 0;\r\n\r\n    list-style-type: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.elevator .elevator_list li img {\r\n    width: 60px;\r\n}\r\n\r\n.elevator .elevator_list li:hover {\r\n    background-color: #f84f52;\r\n}\r\n</style>"],"mappings":";OAiBkCA,UAA0C;;gEAfxEC,mBAAA,CAA6C;EAAxCC,KAAK,EAAC,KAAK;EAAC,WAAS,EAAC;;gEAG3BD,mBAAA,CAAqC;EAAhC,WAAS,EAAC;AAAe;gEAG9BA,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAW,I,aAClBC,mBAAA,SAAY,E,aACZF,mBAAA,CACM;EADDC,KAAK,EAAC,UAAU;EAACE,EAAE,EAAC;;gEAK7BH,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAU,I,aACjBD,mBAAA,CAEK;EAFDC,KAAK,EAAC;AAAe,I,aACrBD,mBAAA,CAA6E;EAAzEG,EAAE,EAAC;AAAS,I,aAACH,mBAAA,CAAuD;EAAlDI,GAA0C,EAA1CL,UAA0C;EAACM,GAAG,EAAC;;gEAK7EL,mBAAA,CAAmD;EAA9CC,KAAK,EAAC,QAAQ;EAAC,WAAS,EAAC;;;;6DArB9BC,mBAAA,QAAW,EACXI,UAA6C,EAE7CJ,mBAAA,SAAY,EACZK,UAAqC,EAErCL,mBAAA,YAAe,EACfM,UAIM,EAENN,mBAAA,YAAe,EACfO,UAIM,EAENP,mBAAA,QAAW,EACXQ,UAAmD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}