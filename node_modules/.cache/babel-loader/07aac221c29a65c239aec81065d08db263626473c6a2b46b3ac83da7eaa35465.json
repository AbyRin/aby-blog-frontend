{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.myData), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.clickkHandler && _ctx.clickkHandler(...args))\n  }, \"修改\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","myData","onClick","_cache","args","_ctx","clickkHandler"],"sources":["D:\\IDEAWorkSpace\\aby-blog-v2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ myData }}</h1>\n    <button @click=\"clickkHandler\">修改</button>\n  </div>\n</template>\n\n<script setup>\n// 1. reactive 声明响应式数据的函数\nimport { reactive } from 'vue'\nconst myData = reactive([1, 2, 3])\nfunction clickHandler() {\n  myData.push(4)\n}\n\n// 2. ref 声明响应式数据的函数\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;uBAAlBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,CAAqB,YAAAC,gBAAA,CAAdC,MAAA,CAAAC,MAAM,kBACbH,mBAAA,CAA0C;IAAjCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,aAAA,IAAAD,IAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}