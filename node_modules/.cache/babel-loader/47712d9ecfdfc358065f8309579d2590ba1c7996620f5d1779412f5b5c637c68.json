{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  mounted() {\n    const fallDiv = document.getElementById(\"fall_div\");\n    const columnCount = window.innerWidth * 1.5 <= window.screen.width ? 2 : 3;\n\n    // 爬虫图片路径\n    function loadImagesFromDirectory(directoryPath) {\n      const imagePaths = [];\n      const imageDirectory = directoryPath;\n      for (let i = 1; i <= 20; i++) {\n        const imagePath = imageDirectory + i + \".png\";\n        imagePaths.push(imagePath);\n      }\n      populateColumns(imagePaths);\n    }\n\n    // 渲染列和图片\n    function populateColumns(imagePaths) {\n      // 创建瀑布列\n      for (let i = 0; i < columnCount; i++) {\n        const column = document.createElement(\"column\");\n        column.classList.add(\"column\");\n        if (fallDiv) {\n          fallDiv.appendChild(column);\n        }\n      }\n\n      // 渲染\n      imagePaths.forEach((imagePath, index) => {\n        const column = fallDiv.children[index % columnCount];\n\n        // 创建：image_div\n        const imageDiv = document.createElement(\"div\");\n        imageDiv.classList.add(\"image_div\");\n        imageDiv.style.boxShadow = \"2px 2px 2px #bdbdbd\";\n        column.appendChild(imageDiv);\n\n        // 创建：图片\n        const image = document.createElement(\"img\");\n        image.src = imagePath;\n        image.alt = \"Image \" + (index + 1);\n        // 图片加载失败时隐藏\n        image.onerror = function () {\n          imageDiv.style.display = 'none';\n        };\n        imageDiv.appendChild(image);\n\n        // 创建：按钮组 image_buttons\n        const imageButtons = document.createElement(\"div\");\n        imageButtons.classList.add(\"image_buttons\");\n        imageDiv.appendChild(imageButtons);\n\n        // 创建：按钮 image_button\n        for (let j = 1; j <= 3; j++) {\n          const button = document.createElement(\"div\");\n          button.classList.add(\"image_button\");\n          button.id = \"btn\" + j;\n          button.style.display = \"flex\";\n          button.style.justifyContent = \"center\";\n          button.style.alignItems = \"center\";\n\n          // 创建：按钮图标 img\n          let imgSrc = \"\";\n          if (j === 1) {\n            imgSrc = \"@/image/icon/icons8-heart-50-gray.png\";\n          } else if (j === 2) {\n            imgSrc = \"@/image/icon/icons8-bookmark-60-gray.png\";\n          } else {\n            imgSrc = \"@/image/icon/icons8-download-48-gray.png\";\n          }\n          const img = document.createElement(\"img\");\n          img.src = imgSrc;\n          img.style.maxWidth = \"24px\";\n          img.alt = \"\";\n          button.appendChild(img);\n          imageButtons.appendChild(button);\n        }\n      }); // 完成渲染\n\n      // 遍历每个 image_buttons 并为其中的按钮绑定事件处理程序\n      function handleButtonHover(event) {\n        const button = event.currentTarget;\n        const img = button.querySelector('img');\n        const btnId = button.id;\n        if (event.type === 'mouseover') {\n          if (btnId === 'btn1') {\n            img.src = \"@/image/icon/icons8-heart-50-color.png\";\n            button.style.borderRadius = \"50px\";\n          } else if (btnId === 'btn2') {\n            img.src = \"@/image/icon/icons8-bookmark-60-color.png\";\n            button.style.borderRadius = \"50px\";\n          } else {\n            img.src = \"@/image/icon/icons8-download-48-color.png\";\n            button.style.borderRadius = \"50px\";\n          }\n        } else if (event.type === 'mouseout') {\n          if (btnId === 'btn1') {\n            img.src = \"@/image/icon/icons8-heart-50-gray.png\";\n            button.style.borderRadius = \"10px\";\n          } else if (btnId === 'btn2') {\n            img.src = \"@/image/icon/icons8-bookmark-60-gray.png\";\n            button.style.borderRadius = \"10px\";\n          } else {\n            img.src = \"@/image/icon/icons8-download-48-gray.png\";\n            button.style.borderRadius = \"10px\";\n          }\n        }\n      }\n\n      // 获取所有 image_button 并 绑定事件\n      const allImageButtons = document.querySelectorAll(\".image_button\");\n      allImageButtons.forEach(button => {\n        button.addEventListener('mouseover', handleButtonHover);\n        button.addEventListener('mouseout', handleButtonHover);\n      });\n    }\n\n    // 调用\n    loadImagesFromDirectory(\"/image/reptile_image/\");\n  }\n};","map":{"version":3,"names":["mounted","fallDiv","document","getElementById","columnCount","window","innerWidth","screen","width","loadImagesFromDirectory","directoryPath","imagePaths","imageDirectory","i","imagePath","push","populateColumns","column","createElement","classList","add","appendChild","forEach","index","children","imageDiv","style","boxShadow","image","src","alt","onerror","display","imageButtons","j","button","id","justifyContent","alignItems","imgSrc","img","maxWidth","handleButtonHover","event","currentTarget","querySelector","btnId","type","borderRadius","allImageButtons","querySelectorAll","addEventListener"],"sources":["D:\\IDEAWorkSpace\\aby-blog-v2\\src\\views\\Inspiration.vue"],"sourcesContent":["<template>\r\n    <!-- 顶部 -->\r\n    <div class=\"top\" th:insert=\"/top.html\"></div>\r\n\r\n    <!-- 侧边栏 -->\r\n    <div th:insert=\"/sidebar.html\"></div>\r\n\r\n    <!-- 网页主要内容 -->\r\n    <div class=\"container\">\r\n        <!-- 图瀑布 -->\r\n        <div class=\"fall_div\" id=\"fall_div\">\r\n        </div>\r\n    </div>\r\n\r\n    <!-- 功能: 电梯 -->\r\n    <div class=\"elevator\">\r\n        <ul class=\"elevator_list\">\r\n            <li id=\"backTop\"><img src=\"@/image/icon/icons8-top-100-gray.png\" alt=\"\"></li>\r\n        </ul>\r\n    </div>\r\n\r\n    <!-- 底部 -->\r\n    <div class=\"bottom\" th:insert=\"/bottom.html\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    const fallDiv = document.getElementById(\"fall_div\");\r\n    const columnCount = window.innerWidth * 1.5 <= window.screen.width ? 2 : 3;\r\n\r\n    // 爬虫图片路径\r\n    function loadImagesFromDirectory(directoryPath) {\r\n        const imagePaths = [];\r\n        const imageDirectory = directoryPath;\r\n\r\n        for (let i = 1; i <= 20; i++) {\r\n            const imagePath = imageDirectory + i + \".png\";\r\n            imagePaths.push(imagePath);\r\n        }\r\n        populateColumns(imagePaths);\r\n    }\r\n\r\n    // 渲染列和图片\r\n    function populateColumns(imagePaths) {\r\n        // 创建瀑布列\r\n        for (let i = 0; i < columnCount; i++) {\r\n            const column = document.createElement(\"column\");\r\n            column.classList.add(\"column\");\r\n            if (fallDiv) {\r\n                fallDiv.appendChild(column);\r\n            }\r\n        }\r\n\r\n        // 渲染\r\n        imagePaths.forEach((imagePath, index) => {\r\n            const column = fallDiv.children[index % columnCount];\r\n\r\n            // 创建：image_div\r\n            const imageDiv = document.createElement(\"div\");\r\n            imageDiv.classList.add(\"image_div\");\r\n            imageDiv.style.boxShadow = \"2px 2px 2px #bdbdbd\";\r\n            column.appendChild(imageDiv);\r\n\r\n            // 创建：图片\r\n            const image = document.createElement(\"img\");\r\n            image.src = imagePath;\r\n            image.alt = \"Image \" + (index + 1);\r\n            // 图片加载失败时隐藏\r\n            image.onerror = function () {\r\n                imageDiv.style.display = 'none';\r\n            };\r\n            imageDiv.appendChild(image);\r\n\r\n            // 创建：按钮组 image_buttons\r\n            const imageButtons = document.createElement(\"div\");\r\n            imageButtons.classList.add(\"image_buttons\");\r\n            imageDiv.appendChild(imageButtons);\r\n\r\n            // 创建：按钮 image_button\r\n            for (let j = 1; j <= 3; j++) {\r\n                const button = document.createElement(\"div\");\r\n                button.classList.add(\"image_button\");\r\n\r\n                button.id = \"btn\" + j;\r\n                button.style.display = \"flex\"\r\n                button.style.justifyContent = \"center\";\r\n                button.style.alignItems = \"center\";\r\n\r\n                // 创建：按钮图标 img\r\n                let imgSrc = \"\";\r\n                if (j === 1) {\r\n                    imgSrc = \"@/image/icon/icons8-heart-50-gray.png\";\r\n                } else if (j === 2) {\r\n                    imgSrc = \"@/image/icon/icons8-bookmark-60-gray.png\";\r\n                } else {\r\n                    imgSrc = \"@/image/icon/icons8-download-48-gray.png\";\r\n                }\r\n\r\n                const img = document.createElement(\"img\");\r\n                img.src = imgSrc;\r\n                img.style.maxWidth = \"24px\";\r\n                img.alt = \"\";\r\n\r\n                button.appendChild(img);\r\n                imageButtons.appendChild(button);\r\n            }\r\n        }); // 完成渲染\r\n\r\n        // 遍历每个 image_buttons 并为其中的按钮绑定事件处理程序\r\n        function handleButtonHover(event) {\r\n            const button = event.currentTarget;\r\n            const img = button.querySelector('img');\r\n            const btnId = button.id;\r\n\r\n            if (event.type === 'mouseover') {\r\n                if (btnId === 'btn1') {\r\n                    img.src = \"@/image/icon/icons8-heart-50-color.png\";\r\n                    button.style.borderRadius = \"50px\";\r\n                } else if (btnId === 'btn2') {\r\n                    img.src = \"@/image/icon/icons8-bookmark-60-color.png\";\r\n                    button.style.borderRadius = \"50px\";\r\n                } else {\r\n                    img.src = \"@/image/icon/icons8-download-48-color.png\";\r\n                    button.style.borderRadius = \"50px\";\r\n                }\r\n            } else if (event.type === 'mouseout') {\r\n                if (btnId === 'btn1') {\r\n                    img.src = \"@/image/icon/icons8-heart-50-gray.png\";\r\n                    button.style.borderRadius = \"10px\";\r\n                } else if (btnId === 'btn2') {\r\n                    img.src = \"@/image/icon/icons8-bookmark-60-gray.png\";\r\n                    button.style.borderRadius = \"10px\";\r\n                } else {\r\n                    img.src = \"@/image/icon/icons8-download-48-gray.png\";\r\n                    button.style.borderRadius = \"10px\";\r\n                }\r\n            }\r\n        }\r\n\r\n        // 获取所有 image_button 并 绑定事件\r\n        const allImageButtons = document.querySelectorAll(\".image_button\");\r\n\r\n        allImageButtons.forEach(button => {\r\n            button.addEventListener('mouseover', handleButtonHover);\r\n            button.addEventListener('mouseout', handleButtonHover);\r\n        });\r\n    }\r\n\r\n    // 调用\r\n    loadImagesFromDirectory(\"/image/reptile_image/\");\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    scroll-behavior: smooth;\r\n}\r\nbody{\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    height: 100%;\r\n    background: #ffffff;\r\n}\r\n\r\np {\r\n    margin-block: 0;\r\n}\r\n\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: Center;\r\n\r\n    margin-top: 148px;\r\n\r\n    /* background-color: #ffffff; */\r\n    /* box-shadow: 2px 2px 2px #bdbdbd; */\r\n}\r\n\r\n/* 图瀑布 —————————————————————————————————————————————————— */\r\n.fall_div {\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n\r\n.column {\r\n    flex: 1;\r\n}\r\n\r\n.image_div {\r\n    width: 400px;\r\n    height: auto;\r\n\r\n    margin: 20px 0;\r\n    padding: 0;\r\n    position: relative;\r\n}\r\n\r\n.image_div img {\r\n    width: 400px;\r\n    height: auto;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n/* 唤醒遮罩 */\r\n.image_div::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    box-shadow: 0 -50px 50px -30px rgba(0, 0, 0, 0.7) inset,\r\n                0 50px 50px -30px rgba(0, 0, 0, 0.7) inset;\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n}\r\n\r\n.image_div:hover::before {\r\n    opacity: 1;\r\n}\r\n\r\n.image_buttons {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n\r\n    right: 5px;\r\n    bottom: 5px;\r\n    z-index: 100;\r\n\r\n    opacity: 0;\r\n    transition: opacity 0.3s;\r\n}\r\n/* 唤醒按钮 */\r\n.image_div:hover .image_buttons {\r\n    opacity: 1;\r\n}\r\n\r\n.image_button {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 10px;\r\n\r\n    margin-bottom: 8px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n\r\n    text-align: center;\r\n    line-height: 40px;\r\n    cursor: pointer;\r\n    transition: border-radius 0.3s;\r\n}\r\n.image_button:hover {\r\n    background-color: rgba(255, 255, 255);\r\n}\r\n\r\n/* 渐变遮罩 */\r\n.focus_div {\r\n    display: flex;\r\n    position: absolute;\r\n\r\n    left: 0;\r\n    top: 0;\r\n\r\n    width: 400px;\r\n    height: 100%;\r\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), transparent);\r\n\r\n    /* z-index: 99; */\r\n}\r\n\r\n/* 功能: 电梯 */\r\n.elevator {\r\n    position: fixed;\r\n    width: 100px;\r\n    height: auto;\r\n\r\n    left: 52%;\r\n    margin-left: 620px;\r\n    bottom: 40px;\r\n    z-index: 100;\r\n\r\n    text-align: center;\r\n    transition: all .5s;\r\n}\r\n.elevator .elevator_list {\r\n    width: 100px;\r\n    height: auto;\r\n\r\n    background: #fff;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    box-shadow: 5px 5px 5px #bdbdbd;\r\n}\r\n.elevator .elevator_list li {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n\r\n    border: 1px solid #dcdcdc;\r\n    margin: 0;\r\n\r\n    list-style-type: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.elevator .elevator_list li img {\r\n    width: 60px;\r\n}\r\n\r\n.elevator .elevator_list li:hover {\r\n    background-color: #f84f52;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}