{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.myData), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString($setup.getLen), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.clickHandler\n  }, \"修改\"), _createElementVNode(\"button\", {\n    onClick: $setup.clickHandler2\n  }, \"修改\"), _createElementVNode(\"button\", {\n    onClick: $setup.clickHandler3\n  }, \"修改\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","myData","getLen","onClick","clickHandler","clickHandler2","clickHandler3"],"sources":["D:\\IDEAWorkSpace\\aby-blog-v2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ myData }}</h1>\n    <h1>{{ getLen }}</h1>\n    <button @click=\"clickHandler\">修改</button>\n    <button @click=\"clickHandler2\">修改</button>\n    <button @click=\"clickHandler3\">修改</button>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, ref, computed } from 'vue'\n\n// 1. reactive 对象的响应式声明(基于ES6 proxy 的代理功能)\n// shallowReactive 浅响应式（只有第一级数据响应）\nconst myData = reactive({\n  name: '张三',\n  age: 18,\n  friends: ['李四', '王五', '赵六']\n})\nfunction clickHandler() {\n  myData.friends.push('七七')\n}\n\n// 2. ref 非对象的响应式声明（底层原理：创建）\nconst count = ref(0)\n\nfunction clickHandler2 () {\n  count.value++\n  console.log(count.value)\n}\n\n// 3. readonly （shallow readonly）只读\n\n// 4. computed 计算属性（缓存性，响应性）\nconst content = ref('测试内容')\nconst getLen = computed(() => {\n  return content.value.length\n})\n\nfunction clickHandler3 () {\n  content.value += '!'\n}\n\n// 5. watch 监听函数（参数1为）\nconst count2 = ref(0)\nwatch(count2, )\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;uBAAlBC,mBAAA,CAMM,OANNC,UAMM,GALJC,mBAAA,CAAqB,YAAAC,gBAAA,CAAdC,MAAA,CAAAC,MAAM,kBACbH,mBAAA,CAAqB,YAAAC,gBAAA,CAAdC,MAAA,CAAAE,MAAM,kBACbJ,mBAAA,CAAyC;IAAhCK,OAAK,EAAEH,MAAA,CAAAI;EAAY,GAAE,IAAE,GAChCN,mBAAA,CAA0C;IAAjCK,OAAK,EAAEH,MAAA,CAAAK;EAAa,GAAE,IAAE,GACjCP,mBAAA,CAA0C;IAAjCK,OAAK,EAAEH,MAAA,CAAAM;EAAa,GAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}